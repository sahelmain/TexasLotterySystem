{"ast":null,"code":"var _jsxFileName = \"/Users/sahelazzam/Desktop/TexasLotterySystemV2/TexasLotterySystem/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Login.css';\nimport { useNavigate } from \"react-router-dom\";\n// Icons removed for simplicity - using text placeholders instead\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [action, setAction] = useState(\"Login\");\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const navigate = useNavigate();\n  const [admin, setAdmin] = useState(\"user\");\n  const signUp = () => {\n    // ensure all fields are filled\n    if (\"\" === email || \"\" === password || \"\" === firstName || \"\" === lastName || \"\" === address) {\n      window.alert(\"Please fill in all fields\");\n      return;\n    }\n\n    // Check if the email is valid (you can add more robust email validation)\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setEmailError(\"Invalid email\");\n      return;\n    }\n\n    // Check if the email already exists\n    checkAccountExists(accountExists => {\n      if (accountExists) {\n        window.alert(\"Account with this email already exists\");\n      } else {\n        // If the email is not taken, create a new user\n        const newUser = {\n          email,\n          password,\n          firstName,\n          lastName,\n          address,\n          admin\n        };\n\n        // Update the database.json file\n        fetch(\"http://localhost:3080/auth/signup\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        }).then(r => r.json()).then(r => {\n          if ('success' === r.message) {\n            //redirects to the login page after successful sign up\n            window.alert(\"Signup successful! You can now log in.\");\n            setAction(\"Login\");\n          } else {\n            window.alert(\"Signup failed. Please try again.\");\n          }\n        });\n      }\n    });\n  };\n  const onButtonClick = () => {\n    checkAccountExists(accountExists => {\n      if (accountExists) {\n        fetch(\"http://localhost:3080/auth\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        }).then(r => r.json()).then(r => {\n          if ('success' === r.message) {\n            localStorage.setItem(\"user\", JSON.stringify({\n              email,\n              token: r.token\n            }));\n            const userAdminStatus = r.admin;\n            console.log(\"User admin status:\", userAdminStatus);\n            //stores email so next pages can use the email for verification/datamanagement\n            window.sessionStorage.setItem('email', email);\n            if (userAdminStatus === \"admin\") {\n              navigate(\"../Admin\");\n            } else {\n              //navigates to home and passes email state.\n              navigate(\"../Home\", {\n                state: email\n              });\n            }\n          } else {\n            window.alert(\"Wrong email or password\");\n          }\n        });\n      } else {\n        window.alert(\"Account does not exist\");\n      }\n    });\n  };\n\n  //Check if the given email ID already exists in database\n  const checkAccountExists = callback => {\n    fetch(\"http://localhost:3080/check-account\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(r => r.json()).then(r => {\n      callback(r === null || r === void 0 ? void 0 : r.userExists);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCE7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          placeholder: \"Enter your email here\",\n          onChange: ev => setEmail(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"errorLabel\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), action === \"Login\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDC64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setFirstName(event.target.value),\n        placeholder: \"Enter First Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 39\n    }, this), action === \"Login\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setLastName(event.target.value),\n        placeholder: \"Enter Last Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 39\n    }, this), action === \"Login\" ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: homeIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setAddress(event.target.value),\n        placeholder: \"Enter Address \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: passIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        placeholder: \"Enter password\",\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: () => {\n          setAction(\"Sign Up\");\n        },\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: () => {\n          setAction(\"Login\");\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: () => {\n          if (action === \"Login\") {\n            onButtonClick();\n          } else {\n            signUp();\n          }\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 12\n  }, this);\n};\n_s(Login, \"Bv6MAXZZDpeyDCfryUrVqPvsW+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","emailError","setEmailError","action","setAction","firstName","setFirstName","lastName","setLastName","address","setAddress","navigate","admin","setAdmin","signUp","window","alert","test","checkAccountExists","accountExists","newUser","fetch","method","headers","body","JSON","stringify","then","r","json","message","onButtonClick","localStorage","setItem","token","userAdminStatus","console","log","sessionStorage","state","callback","userExists","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","placeholder","onChange","ev","target","type","event","src","userIcon","alt","homeIcon","passIcon","onClick","_c","$RefreshReg$"],"sources":["/Users/sahelazzam/Desktop/TexasLotterySystemV2/TexasLotterySystem/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Login.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\n// Icons removed for simplicity - using text placeholders instead\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [emailError, setEmailError] = useState(\"\")\r\n\r\n    const [action,setAction] = useState(\"Login\")\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const navigate = useNavigate();\r\n    const [admin, setAdmin] =useState(\"user\")\r\n    \r\n\r\n    \r\n    const signUp = () => {\r\n        // ensure all fields are filled\r\n        if (\"\"===email || \"\"===password || \"\"===firstName || \"\"===lastName || \"\"===address) {\r\n            window.alert(\"Please fill in all fields\");\r\n            return;\r\n        }\r\n    \r\n        // Check if the email is valid (you can add more robust email validation)\r\n        if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            setEmailError(\"Invalid email\");\r\n            return;\r\n        }\r\n    \r\n        // Check if the email already exists\r\n        checkAccountExists(accountExists => {\r\n            if (accountExists) {\r\n                window.alert(\"Account with this email already exists\");\r\n            } else {\r\n                // If the email is not taken, create a new user\r\n                const newUser = {\r\n                    email,\r\n                    password,\r\n                    firstName,\r\n                    lastName,\r\n                    address,\r\n                    admin\r\n                };\r\n    \r\n                // Update the database.json file\r\n                fetch(\"http://localhost:3080/auth/signup\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newUser)\r\n                })\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    if ('success' === r.message) {\r\n                        //redirects to the login page after successful sign up\r\n                        window.alert(\"Signup successful! You can now log in.\");\r\n                        setAction(\"Login\");\r\n                    } else {\r\n                        window.alert(\"Signup failed. Please try again.\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const onButtonClick = () => {\r\n        checkAccountExists(accountExists => {\r\n            if (accountExists) {\r\n                fetch(\"http://localhost:3080/auth\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ email, password })\r\n                })\r\n                    .then(r => r.json())\r\n                    .then(r => {\r\n                        if ('success' === r.message) {\r\n                            localStorage.setItem(\"user\", JSON.stringify({ email, token: r.token }));\r\n                            const userAdminStatus = r.admin;\r\n\r\n                            \r\n                            console.log(\"User admin status:\", userAdminStatus);\r\n                            //stores email so next pages can use the email for verification/datamanagement\r\n                            window.sessionStorage.setItem('email', email);\r\n                            if (userAdminStatus === \"admin\") {\r\n                                navigate(\"../Admin\");\r\n                            } else {\r\n                                //navigates to home and passes email state.\r\n                                navigate(\"../Home\", { state: email });\r\n                            }\r\n                        }else {\r\n                            window.alert(\"Wrong email or password\")\r\n                        }\r\n                    })\r\n            } else {\r\n                window.alert(\"Account does not exist\")\r\n            }\r\n        });\r\n    }\r\n        \r\n\r\n    //Check if the given email ID already exists in database\r\n    const checkAccountExists = (callback) => {\r\n        fetch(\"http://localhost:3080/check-account\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body: JSON.stringify({email})\r\n        })\r\n        .then(r => r.json())\r\n        .then(r => {\r\n            callback(r?.userExists)\r\n        })\r\n        \r\n    }\r\n\r\n   \r\n    \r\n\r\n    return <div className={\"container\"}>\r\n        <div className=\"header\">\r\n            <div className=\"text\">{action}</div>\r\n            <div className=\"underline\"></div>\r\n        </div>\r\n        \r\n        <div className=\"inputs\">\r\n        <div className=\"input\">\r\n            <span>📧</span>\r\n                <input\r\n                    value={email}\r\n                    placeholder=\"Enter your email here\"\r\n                    onChange={ev => setEmail(ev.target.value)}\r\n                    />\r\n                <label className=\"errorLabel\">{emailError}</label>\r\n            </div>\r\n            </div>\r\n        {action===\"Login\"?<div></div>:<div className=\"input\">\r\n                <span>👤</span>\r\n                <input type=\"text\" onChange={(event) => setFirstName(event.target.value)}placeholder='Enter First Name '/>\r\n                \r\n            </div>\r\n            }\r\n        {action===\"Login\"?<div></div>:<div className=\"input\">\r\n                <img src={userIcon} alt=\"\" />\r\n                <input type=\"text\" onChange={(event) => setLastName(event.target.value)}placeholder='Enter Last Name '/>\r\n                \r\n            </div>\r\n            }\r\n        {action===\"Login\"?<div></div>:<div className=\"input\">\r\n                <img src={homeIcon} alt=\"\" />\r\n                <input type=\"text\" onChange={(event) => setAddress(event.target.value)}placeholder='Enter Address '/>\r\n                \r\n            </div>\r\n            }\r\n\r\n        <div className=\"input\">\r\n        <img src={passIcon} alt=\"\" />\r\n            <input\r\n                value={password}\r\n                placeholder=\"Enter password\"\r\n                onChange={ev => setPassword(ev.target.value)}\r\n                />\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"submit-container\">\r\n            <div className=\"submit\"\r\n                onClick={()=>{setAction(\"Sign Up\")}}>Sign Up</div>\r\n\r\n            <div className=\"submit\"\r\n                onClick={()=>{setAction(\"Login\")}}>Login</div>\r\n\r\n\r\n        </div>\r\n        <div className=\"submit-login\">\r\n        <div className=\"submit\"\r\n                onClick={()=> {\r\n                    if(action===\"Login\")\r\n                    {\r\n                        onButtonClick();\r\n                    }\r\n                    else{\r\n                        signUp();\r\n                    }\r\n                }} >Submit</div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        \r\n        \r\n        \r\n    \r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}