{"ast":null,"code":"var _jsxFileName = \"/Users/sahelazzam/Desktop/TexasLotterySystemV2/TexasLotterySystem/src/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  //sets initial val to 0\n  const [mega, setMega] = useState(0);\n  const [power, setPower] = useState(0);\n  const [texasLotto, setTexasLotto] = useState(0);\n  const [texasStep, setTexasStep] = useState(0);\n  //Gets random int between two values\n  const randomNumber = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  const generatePowerball = () => {\n    const whiteBalls = Array.from({\n      length: 5\n    }, () => randomNumber(1, 69)).sort((a, b) => a - b);\n    const powerball = randomNumber(1, 26);\n    return {\n      type: 'Power Ball',\n      numbers: [...whiteBalls, powerball]\n    };\n  };\n  const generateMegaMillions = () => {\n    const whiteBalls = Array.from({\n      length: 5\n    }, () => randomNumber(1, 70)).sort((a, b) => a - b);\n    const megaBall = randomNumber(1, 25);\n    return {\n      type: 'Mega Millions',\n      numbers: [...whiteBalls, megaBall]\n    };\n  };\n  const generateLottoTexas = () => {\n    const balls = Array.from({\n      length: 6\n    }, () => randomNumber(1, 54)).sort((a, b) => a - b);\n    return {\n      type: 'Lotto Texas',\n      numbers: balls\n    };\n  };\n  const generateTexasTwoStep = () => {\n    const whiteBalls = Array.from({\n      length: 4\n    }, () => randomNumber(1, 35)).sort((a, b) => a - b);\n    const bonus = randomNumber(1, 35);\n    return {\n      type: 'Texas Two Step',\n      numbers: [...whiteBalls, bonus]\n    };\n  };\n  const onButtonClick = async () => {\n    const mega = generateMegaMillions();\n    const power = generatePowerball();\n    const texasLotto = generateLottoTexas();\n    const texasStep = generateTexasTwoStep();\n    setMega(mega.numbers);\n    setPower(power.numbers);\n    setTexasLotto(texasLotto.numbers);\n    setTexasStep(texasStep.numbers);\n    try {\n      await fetch(\"http://localhost:3080/store-winning-numbers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          mega,\n          power,\n          texasLotto,\n          texasStep\n        })\n      });\n    } catch (error) {\n      console.error(\"Error storing winning numbers:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num\",\n      children: [\"Winning numbers for Mega Millions: \", mega.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num\",\n      children: [\"Winning numbers for Power Ball: \", power.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num\",\n      children: [\"Winning numbers for Lotto Texas: \", texasLotto.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"num\",\n      children: [\"Winning numbers for Texas Two Step: \", texasStep.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: \"Generate and Store New Winning Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"rW+FO4xpZfygDXsY1fGIxBnLrtk=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Admin","_s","mega","setMega","power","setPower","texasLotto","setTexasLotto","texasStep","setTexasStep","randomNumber","min","max","Math","ceil","floor","random","generatePowerball","whiteBalls","Array","from","length","sort","a","b","powerball","type","numbers","generateMegaMillions","megaBall","generateLottoTexas","balls","generateTexasTwoStep","bonus","onButtonClick","fetch","method","headers","body","JSON","stringify","error","console","className","children","join","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sahelazzam/Desktop/TexasLotterySystemV2/TexasLotterySystem/src/Admin.js"],"sourcesContent":["import React, { useState } from \"react\"; \r\n\r\nconst Admin = () => {\r\n    //sets initial val to 0\r\n    const [mega, setMega] = useState(0);\r\n    const [power, setPower] = useState(0);\r\n    const [texasLotto, setTexasLotto] = useState(0);\r\n    const [texasStep, setTexasStep] = useState(0); \r\n    //Gets random int between two values\r\n    const randomNumber = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max); \r\n        return Math.floor(Math.random() * (max - min + 1)+ min); \r\n    }; \r\n  \r\n    const generatePowerball = () => {\r\n      const whiteBalls = Array.from({length: 5}, () => randomNumber(1, 69)).sort((a, b) => a - b);\r\n      const powerball = randomNumber(1, 26);\r\n      return { type: 'Power Ball', numbers: [...whiteBalls, powerball] };\r\n    };\r\n\r\n    const generateMegaMillions = () => {\r\n      const whiteBalls = Array.from({length: 5}, () => randomNumber(1, 70)).sort((a, b) => a - b);\r\n      const megaBall = randomNumber(1, 25);\r\n      return { type: 'Mega Millions', numbers: [...whiteBalls, megaBall] };\r\n    };\r\n\r\n    const generateLottoTexas = () => {\r\n      const balls = Array.from({length: 6}, () => randomNumber(1, 54)).sort((a, b) => a - b);\r\n      return { type: 'Lotto Texas', numbers: balls };\r\n    };\r\n\r\n    const generateTexasTwoStep = () => {\r\n      const whiteBalls = Array.from({length: 4}, () => randomNumber(1, 35)).sort((a, b) => a - b);\r\n      const bonus = randomNumber(1, 35);\r\n      return { type: 'Texas Two Step', numbers: [...whiteBalls, bonus] };\r\n    };\r\n\r\n    const onButtonClick = async () => {\r\n      const mega = generateMegaMillions();\r\n      const power = generatePowerball();\r\n      const texasLotto = generateLottoTexas();\r\n      const texasStep = generateTexasTwoStep();\r\n      setMega(mega.numbers);\r\n      setPower(power.numbers);\r\n      setTexasLotto(texasLotto.numbers);\r\n      setTexasStep(texasStep.numbers);\r\n\r\n      try {\r\n        await fetch(\"http://localhost:3080/store-winning-numbers\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ mega, power, texasLotto, texasStep }),\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error storing winning numbers:\", error);\r\n      }\r\n    }; \r\n    return ( \r\n        <div className=\"wrapper\"> \r\n            <div className=\"num\">Winning numbers for Mega Millions: {mega.join(', ')}</div>\r\n            <div className=\"num\">Winning numbers for Power Ball: {power.join(', ')}</div>\r\n            <div className=\"num\">Winning numbers for Lotto Texas: {texasLotto.join(', ')}</div>\r\n            <div className=\"num\">Winning numbers for Texas Two Step: {texasStep.join(', ')}</div>\r\n            <button onClick={onButtonClick}>\r\n              Generate and Store New Winning Numbers\r\n            </button>\r\n        </div> \r\n    ); \r\n}; \r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}